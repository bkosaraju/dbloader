/*
 * Copyright (c) 2021. Lorem ipsum dolor sit amet, consectetur adipiscing elit.
 * Morbi non lorem porttitor neque feugiat blandit. Ut vitae ipsum eget quam lacinia accumsan.
 * Etiam sed turpis ac ipsum condimentum fringilla. Maecenas magna.
 * Proin dapibus sapien vel ante. Aliquam erat volutpat. Pellentesque sagittis ligula eget metus.
 * Vestibulum commodo. Ut rhoncus gravida arcu.
 */

buildscript {
    ext.scalaVariant = "2.12"
    ext.sparkVersion = "3.0.0"
    ext.awsSDKVersion = "1.11.721"
    ext.utilsVersion = "1.02"

    repositories {
        maven {
            url "${gradle.artifactoryUrl}"
            if (System.getenv("ARTIFACTORY_USER") || Project.hasProperty('artifactoryUser')) {
                credentials {
                    username = System.getenv("ARTIFACTORY_USER") ?: artifactoryUser
                    password = System.getenv("ARTIFACTORY_PASSWORD") ?: artifactoryPassword
                }
            }
        }

        dependencies {
            classpath "org.ajoberstar:grgit:2.3.0"
            classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
        }
    }
}

plugins {
    id 'scala'
    id "org.scoverage" version "4.0.2"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "jacoco"
    id "java-library"
    id "com.adarshr.test-logger" version "1.3.0"
    id "maven-publish"
    id "idea"
}

group "${gradle.projectGroup}"




repositories {
    maven {
        url "${gradle.artifactoryUrl}"
        if (System.getenv("ARTIFACTORY_USER") || Project.hasProperty('artifactoryUser')) {
            credentials {
                username = System.getenv("ARTIFACTORY_USER") ?: artifactoryUser
                password = System.getenv("ARTIFACTORY_PASSWORD") ?: artifactoryPassword
            }
        }
    }
    maven {
        url "https://dl.bintray.com/spark-packages/maven"
    }
}

configurations {
    assembly
    compile.extendsFrom assembly
}

configurations {
    provided
    compile.extendsFrom provided
}

configurations {
    testImplementation.extendsFrom compileOnly
}

configurations {
    archivesBaseName = "${gradle.projectName}" + "_${scalaVariant}"
}
configurations {
    compileClasspath {
        resolutionStrategy.force 'com.fasterxml.jackson.core:jackson-databind:2.11.0.rc1'
        resolutionStrategy.force 'commons-beanutils:commons-beanutils:1.9.4'
        resolutionStrategy.force 'commons-collections:commons-collections:3.2.2'
    }
}

configurations {
    implementation  {
        resolutionStrategy.force 'com.fasterxml.jackson.core:jackson-databind:2.11.0.rc1'
        resolutionStrategy.force 'commons-beanutils:commons-beanutils:1.9.4'
        resolutionStrategy.force 'commons-collections:commons-collections:3.2.2'
    }

}

configurations.compile { transitive = false }

dependencies {

    api group: 'org.scala-lang', name :'scala-library', version : "$scalaVariant"+'.12'
    api group: 'io.github.bkosaraju', name: 'utils_'+"$scalaVariant", version: "$utilsVersion"

//    //Spark dependencies(only for compile)
    compileOnly group: 'org.apache.spark', name: 'spark-core_'+"$scalaVariant", version:"$sparkVersion"
    compileOnly group: 'org.apache.spark', name: 'spark-sql_'+"$scalaVariant", version:"$sparkVersion"
    compileOnly group: 'org.apache.spark', name: 'spark-hive_'+"$scalaVariant", version:"$sparkVersion"

    // Use Scalatest for testing our library
    testImplementation group: 'org.scalatest', name: 'scalatest_'+"$scalaVariant", version: '3.0.5'
    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation group: 'com.github.stefanbirkner', name: 'system-rules', version: '1.16.0'
    testImplementation group: 'org.pegdown', name: 'pegdown', version: '1.6.0'
    testImplementation group: 'org.mockito', name: 'mockito-all', version: '1.9.5'
    testImplementation group: 'com.h2database', name: 'h2', version: '1.4.195'
}

configurations {
    runtime.exclude group: "org.slf4j", module: "slf4j-log4j12"
}


shadowJar {
    zip64 true
    //configurations = [project.configurations.compile]
    project.configurations.implementation.canBeResolved = true
    configurations = [project.configurations.implementation]
}


tasks.build.dependsOn tasks.shadowJar

test {
    useJUnit {}
    jvmArgs '-Xmx1024m'
    testLogging.showStandardStreams = true
    reports {
        junitXml.enabled = true
    }

}

testlogger {
    theme 'standard'
    showExceptions true
    slowThreshold 10000
    showSummary true
    showStandardStreams false
}

compileScala {
    scalaCompileOptions.additionalParameters = ["-feature"]
}

//def gitlogDir = new File( project.projectDir.toString() + '/.git')
//if (gitlogDir.exists()) {
//    apply from: 'ci/git.gradle'
//    apply from: 'ci/artifactory.gradle'
//    apply fram: 'ci/sonatype.gradle'
//}